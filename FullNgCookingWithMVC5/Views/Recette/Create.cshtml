@model ViewModels.Recettes.RecetteViewModel
@using Models.Ingredients
@using Models.Ctegories
@using FullNgCookingWithMVC5.Controllers
@{
    ViewBag.Title = "Create recette";
    RecetteController recetteCntrl = new RecetteController();
    IngredientController ingredientCntrl = new IngredientController();
    IList<Category> categories = new List<Category>();
    categories = recetteCntrl.getAllCategories().Cast<Category>().ToList();
    IList<Ingredient> recetteIngsList = new List<Ingredient>();
    var ingId = Request["ingId"];
    

}

@using (Html.BeginForm("Create", "Recette", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    <div class="col-xs-12 col-sm-9">
        <div class="content" id="content_recettes_new">

            <h1 class="page-title">Nouvelle recette @categories.Count ! @ingId </h1>  

            <section class="section"> 
                <div class="row">
                    @Html.AntiForgeryToken()
                    <div class="col-xs-6">
                        <div class="form-horizontal">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.IsAvailable, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.IsAvailable)
                                        @Html.ValidationMessageFor(model => model.IsAvailable, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>



                            <div class="form-group">
                                @Html.LabelFor(model => model.Preparation, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Preparation, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Preparation, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-6" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(m => m.Category, new SelectList(@ViewBag.categories, "Id", "Name"), "Select Category", new { @class = "form-control" })
                                    @*@Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })*@
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-6">
                        <div class="form-group">
                            @Html.LabelFor(m => m.Picture, new { @class = "col-md-6 control-label" })
                            <div class="col-md-10">
                                <input type="file" id="image" name="image" />
                                <br />
                            </div>
                        </div>
                        @*<p class="line">
                                <label for="">Photo de la recette</label>
                                <input type="file" class="mb0">
                            </p>*@
                        <p class="line ac">
                            <img class="current_img" src="~/img/recette_placeholder.jpg" alt="Visuel recette">
                        </p>
                    </div>
                    <div class="col-xs-12">
                        <div class="hr mt2 mb2"></div>
                    </div>
                    <div class="col-xs-12">
                        <p class="line ac">
                            <label for="">Sélectionnez tous les ingrédients de votre recette</label>
                        </p>
                        <p class="ac">
                            @Html.DropDownList("Categories", new SelectList(categories, "Id", "Name"), "Select Category", new { @class = "form-control", @onchange = "GetIng()" })
                            <span class="span-label"><span class="glyphicon glyphicon-menu-right nm"></span></span> 
                            @Html.DropDownList("Ingredients", new SelectList(Enumerable.Empty<SelectListItem>(), "Id", "Name"), "Select ingredients", new { @class = "form-control" })
                            <button type="button" class="btn btn_color3" onclick="AddIng()"><span class="glyphicon glyphicon-plus"></span></button>
                            @*<button type="button" value="Upload" onclick="location.href='@Url.Action("UpdateIngredientList", "Recette", new {id=4,operation="add" })'"></button>*@
                            <a href="@Url.Action("UpdateIngredientList", "Recette",new {id=4,operation="add"})">Btn</a> 
                        </p>
                        <div class="ingredients_list">
                            <ul class="list ac">
                                @Html.Partial("UpdateIngredientList") 
                               
                                    @*@foreach (var ing in recetteIngsList )
                                    {
                                        //caloriesValue += ing.Calories;
                                        <li class="item">
                                            @DisplayPicHelper.DisplayPicture(ing.Picture, ing.Name, "ing")
                                            <p class="item-name" title="@ing.Name">@ing.Name</p>
                                            <button type="button" class="remove_ingredient" onclick="RemoveIng(@ing.Id)"><span class="glyphicon glyphicon-remove"></span></button>
                                        </li>
                                    }*@
                               
                            </ul>
                        </div>
                    </div>

                    <div class="col-xs-12">
                        <div class="hr mb2"></div>
                    </div>
                    <div class="col-xs-12 ac">
                        <button type="submit" class="btn btn_color3 recette_save"><span class="glyphicon glyphicon-ok mr0"></span><span>Valider ma recette</span></button>
                    </div>
                    @*<div>
                            <span class="glyphicon glyphicon-ok mr0"></span><span>Valider ma recette</span>
                            <input type="submit" value="Create"  />
                        </div>*@
                </div>
            </section>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    <script>
        function GetIng() {
            var catId = $("#Categories").val();
            $.ajax({
                url: '/Recette/AddIngToRecette/',
                type: "POST",
                dataType: "JSON",
                data: { idCategory: catId },
                success: function (ingredients) {
                    alert("ça marche..");
                    $("#Ingredients").html(""); // clear before appending new list
                    $.each(ingredients, function (i, ing) {
                        $("#Ingredients").append(
                            $('<option></option>').val(ing.Id).html(ing.Name));
                    });
                }
            });
        }
    </script>
    <script>
        function AddIng() {

            var ingId = $('#Ingredients').val();
            //var url = "/Recettes/UpdateIngredientList/"; 
            //$.post(url, { id: ingId, operation: "add" })
            // .done(function (response) {
            //     $("#SelectedIngerdients").html(response);
            // });
            @*var l= @ingredientCntrl.getAll();*@   
         
            //$.ajax({
            //    url: '~/Views/Recette/create.cshtml',
            //    type: 'POST',
            //    data: { ingId:ingId},
            //    success: function(result) {
            //        // TODO: do something with the result returned by the 
            //        // foo.cshtml template
            //    }
            //});

            $.ajax({
                url: '/Recette/UpdateIngredientList/',
                type: "POST",
                dataType: "JSON",
                data: { id: ingId, operation: "add" },
                success: function (ingredients) {
                    alert("succes");

                }
            });
        }
    </script>

    <script>
        function RemoveIng(ingId) {
            $.ajax({
                url: '/Recette/UpdateIngredientList/',
                type: "POST",
                dataType: "JSON",
                data: { id: ingId, operation: "remove" },
                success: function (ingredients) {
                    alert("succes");
                }
            });
        }
    </script>
}